-- Generated by CSharp.lua Compiler
local System = System
local SlipeServerResources
local ArrayResource
local DictObjectResource
System.import(function (out)
  SlipeServerResources = Slipe.Server.Resources
  ArrayResource = System.Array(SlipeServerResources.Resource)
  DictObjectResource = System.Dictionary(System.Object, SlipeServerResources.Resource)
end)
System.namespace("Slipe.Server.Resources", function (namespace)
  -- <summary>
  -- Manages resources
  -- </summary>
  namespace.class("ResourceManager", function (namespace)
    local instance, getInstance, RegisterResource, GetResource, CastMultiple, class, __ctor__
    __ctor__ = function (this)
      this.resources = DictObjectResource()
    end
    getInstance = function ()
      if instance == nil then
        instance = class()
      end
      return instance
    end
    -- <summary>
    -- Registers an resource class
    -- </summary>
    RegisterResource = function (this, resource)
      this.resources:Add(resource.MTAResource, resource)
    end
    -- <summary>
    -- Gets an resource class instance given a certain MTA resource
    -- </summary>
    GetResource = function (this, resource)
      if resource == nil then
        return nil
      end
      if not this.resources:ContainsKey(resource) then
        return SlipeServerResources.Resource(resource)
      end
      return this.resources:get(resource)
    end
    -- <summary>
    -- Cast an array of MTAResources to a desired type
    -- </summary>
    CastMultiple = function (this, resources)
      local result = ArrayResource:new(#resources)
      for i = 0, #resources - 1 do
        result:set(i, GetResource(getInstance(), resources:get(i)))
      end
      return result
    end
    class = {
      getInstance = getInstance,
      RegisterResource = RegisterResource,
      GetResource = GetResource,
      CastMultiple = CastMultiple,
      __ctor__ = __ctor__
    }
    return class
  end)
end)
