-- Generated by CSharp.lua Compiler
local System = System
local SlipeMtaDefinitions
local SlipeServerElements
local SlipeServerGameServer
local SlipeServerGameWorld
local SlipeServerMarkers
local SlipeServerPeds
local SlipeServerPickups
local SlipeServerRadar
local SlipeServerVehicles
local SlipeSharedCollisionShapes
local SlipeSharedElements
local DictTypeString
System.import(function (out)
  SlipeMtaDefinitions = Slipe.MtaDefinitions
  SlipeServerElements = Slipe.Server.Elements
  SlipeServerGameServer = Slipe.Server.GameServer
  SlipeServerGameWorld = Slipe.Server.GameWorld
  SlipeServerMarkers = Slipe.Server.Markers
  SlipeServerPeds = Slipe.Server.Peds
  SlipeServerPickups = Slipe.Server.Pickups
  SlipeServerRadar = Slipe.Server.Radar
  SlipeServerVehicles = Slipe.Server.Vehicles
  SlipeSharedCollisionShapes = Slipe.Shared.CollisionShapes
  SlipeSharedElements = Slipe.Shared.Elements
  DictTypeString = System.Dictionary(System.Type, System.String)
end)
System.namespace("Slipe.Server.Elements", function (namespace)
  -- <summary>
  -- This class enables the server element manager to properly cast MTA elements to server class instances
  -- </summary>
  namespace.class("ElementHelper", function (namespace)
    local ElementTypeNames, GetByType, GetTypeName, GetByType1, InstantiateElement, static
    static = function (this)
      local default = DictTypeString()
      default:set(System.typeof(SlipeSharedElements.Element), "element")
      default:set(System.typeof(SlipeServerVehicles.Vehicle), "vehicle")
      default:set(System.typeof(SlipeServerPeds.Player), "player")
      default:set(System.typeof(SlipeServerGameWorld.WorldObject), "object")
      default:set(System.typeof(SlipeSharedCollisionShapes.CollisionShape), "colshape")
      default:set(System.typeof(SlipeServerPickups.Pickup), "pickup")
      default:set(System.typeof(SlipeServerRadar.Blip), "blip")
      default:set(System.typeof(SlipeServerRadar.RadarArea), "radararea")
      default:set(System.typeof(SlipeServerGameServer.Team), "team")
      default:set(System.typeof(SlipeServerMarkers.Marker), "marker")
      default:set(System.typeof(SlipeServerGameWorld.Water), "water")
      default:set(System.typeof(SlipeServerPeds.Ped), "ped")
      default:set(System.typeof(SlipeServerElements.RootElement), "root")
      default:set(System.typeof(SlipeServerElements.ResourceRootElement), "resource")
      ElementTypeNames = default
    end
    -- <summary>
    -- Returns a list of all elements of type T
    -- </summary>
    GetByType = function (startAt, T)
      local elements = System.List(T)()

      if not ElementTypeNames:ContainsKey(System.typeof(T)) then
        return elements
      end
      local mtaElements = SlipeMtaDefinitions.MtaShared.GetListFromTable(SlipeMtaDefinitions.MtaServer.GetElementsByType(ElementTypeNames:get(System.typeof(T)), startAt:getMTAElement()), "element")
      for _, mtaElement in System.each(mtaElements) do
        local element = SlipeSharedElements.ElementManager.getInstance():GetElement(System.cast(SlipeMtaDefinitions.MtaElement, mtaElement))
        if element ~= nil and System.is(element, T) then
          elements:Add(System.cast(T, element))
        end
      end

      return elements
    end
    -- <summary>
    -- Get the string representation of an element type
    -- </summary>
    -- <returns>A string describing the MTA element type</returns>
    GetTypeName = function (this, type)
      return ElementTypeNames:get(type)
    end
    -- <summary>
    -- Returns a list of all elements of type T
    -- </summary>
    GetByType1 = function (T)
      return GetByType(SlipeSharedElements.Element.getRoot(), T)
    end
    -- <summary>
    -- Creates an instance of an element given a certain type
    -- </summary>
    InstantiateElement = function (this, type, element)
      repeat
        local default = type
        if default == "element" then
          return System.new(SlipeSharedElements.Element, 2, element)
        elseif default == "vehicle" then
          return System.new(SlipeServerVehicles.Vehicle, 3, element)
        elseif default == "player" then
          return SlipeServerPeds.Player(element)
        elseif default == "object" then
          return SlipeServerGameWorld.WorldObject(element)
        elseif default == "colshape" then
          return SlipeSharedCollisionShapes.CollisionShape(element)
        elseif default == "pickup" then
          return SlipeServerPickups.Pickup(element)
        elseif default == "blip" then
          return SlipeServerRadar.Blip(element)
        elseif default == "radararea" then
          return SlipeServerRadar.RadarArea(element)
        elseif default == "team" then
          return SlipeServerGameServer.Team(element)
        elseif default == "marker" then
          return SlipeServerMarkers.Marker(element)
        elseif default == "water" then
          return SlipeServerGameWorld.Water(element)
        elseif default == "ped" then
          return SlipeServerPeds.Ped(element)
        elseif default == "root" then
          return SlipeServerElements.RootElement(element)
        elseif default == "resource" then
          return SlipeServerElements.ResourceRootElement(element)
        else
          return System.new(SlipeSharedElements.Element, 2, element)
        end
      until 1
    end
    return {
      __inherits__ = function (out)
        return {
          out.Slipe.Shared.Elements.IElementHelper
        }
      end,
      GetByType = GetByType,
      GetTypeName = GetTypeName,
      GetByType1 = GetByType1,
      InstantiateElement = InstantiateElement,
      static = static
    }
  end)
end)
