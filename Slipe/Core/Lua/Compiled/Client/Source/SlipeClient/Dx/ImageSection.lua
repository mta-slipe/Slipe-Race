-- Generated by CSharp.lua Compiler
local System = System
local SlipeClientDx
local SlipeMtaDefinitions
local SlipeSharedUtilities
local SystemNumerics
System.import(function (out)
  SlipeClientDx = Slipe.Client.Dx
  SlipeMtaDefinitions = Slipe.MtaDefinitions
  SlipeSharedUtilities = Slipe.Shared.Utilities
  SystemNumerics = System.Numerics
end)
System.namespace("Slipe.Client.Dx", function (namespace)
  -- <summary>
  -- Differing from DxImage, this clas only represnts a part of an image.
  -- </summary>
  namespace.class("ImageSection", function (namespace)
    local Draw, internal, __ctor1__, __ctor2__, __ctor3__, __ctor4__, __ctor5__, __ctor6__
    internal = function (this)
      this.SectionTopLeft = System.default(SystemNumerics.Vector2)
      this.SectionDimensions = System.default(SystemNumerics.Vector2)
    end
    -- <summary>
    -- Create an image section from a filepath with color
    -- </summary>
    __ctor1__ = function (this, position, dimensions, sectionUV, UVDimensions, filePath, rotation, rotationCenter, color, postGUI)
      internal(this)
      SlipeClientDx.Image.__ctor__[1](this, position:__clone__(), dimensions:__clone__(), filePath, rotation, rotationCenter:__clone__(), color, postGUI)
      this.SectionTopLeft = sectionUV:__clone__()
      this.SectionDimensions = UVDimensions:__clone__()
    end
    -- <summary>
    -- Create an image section from a filepath with rotation
    -- </summary>
    __ctor2__ = function (this, position, dimensions, sectionUV, UVDimensions, filePath, rotation, rotationCenter)
      __ctor1__(this, position:__clone__(), dimensions:__clone__(), sectionUV:__clone__(), UVDimensions:__clone__(), filePath, rotation, rotationCenter:__clone__(), SlipeSharedUtilities.Color.getWhite(), false)
    end
    -- <summary>
    -- Create an image section from a filepath
    -- </summary>
    __ctor3__ = function (this, position, dimensions, sectionUV, UVDimensions, filePath, rotation)
      __ctor2__(this, position:__clone__(), dimensions:__clone__(), sectionUV:__clone__(), UVDimensions:__clone__(), filePath, rotation, SystemNumerics.Vector2.getZero())
    end
    -- <summary>
    -- Create an image section from a material with color
    -- </summary>
    __ctor4__ = function (this, position, dimensions, sectionUV, UVDimensions, material, rotation, rotationCenter, color, postGUI)
      internal(this)
      SlipeClientDx.Image.__ctor__[4](this, position:__clone__(), dimensions:__clone__(), material, rotation, rotationCenter:__clone__(), color, postGUI)
      this.SectionTopLeft = sectionUV:__clone__()
      this.SectionDimensions = UVDimensions:__clone__()
    end
    -- <summary>
    -- Create an image section from a material with rotation
    -- </summary>
    __ctor5__ = function (this, position, dimensions, sectionUV, UVDimensions, material, rotation, rotationCenter)
      __ctor4__(this, position:__clone__(), dimensions:__clone__(), sectionUV:__clone__(), UVDimensions:__clone__(), material, rotation, rotationCenter:__clone__(), SlipeSharedUtilities.Color.getWhite(), false)
    end
    -- <summary>
    -- Create an image section from a material
    -- </summary>
    __ctor6__ = function (this, position, dimensions, sectionUV, UVDimensions, material, rotation)
      __ctor5__(this, position:__clone__(), dimensions:__clone__(), sectionUV:__clone__(), UVDimensions:__clone__(), material, rotation, SystemNumerics.Vector2.getZero())
    end
    Draw = function (this)
      if this.usePath then
        return SlipeMtaDefinitions.MtaClient.DxDrawImageSection(this:getPosition().X, this:getPosition().Y, this.Dimensions.X, this.Dimensions.Y, this.SectionTopLeft.X, this.SectionTopLeft.Y, this.SectionDimensions.X, this.SectionDimensions.Y, this:getFilePath(), this.Rotation, this.RotationCenter.X, this.RotationCenter.Y, this.Color:getHex(), this.PostGUI)
      else
        local default = this:getMaterial()
        if default ~= nil then
          default = default:getMaterialElement()
        end
        return SlipeMtaDefinitions.MtaClient.DxDrawImageSection(this:getPosition().X, this:getPosition().Y, this.Dimensions.X, this.Dimensions.Y, this.SectionTopLeft.X, this.SectionTopLeft.Y, this.SectionDimensions.X, this.SectionDimensions.Y, default, this.Rotation, this.RotationCenter.X, this.RotationCenter.Y, this.Color:getHex(), this.PostGUI)
      end
    end
    return {
      __inherits__ = function (out)
        return {
          out.Slipe.Client.Dx.Image
        }
      end,
      Draw = Draw,
      __ctor__ = {
        __ctor1__,
        __ctor2__,
        __ctor3__,
        __ctor4__,
        __ctor5__,
        __ctor6__
      }
    }
  end)
end)
