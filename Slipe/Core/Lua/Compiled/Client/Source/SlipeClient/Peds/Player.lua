-- Generated by CSharp.lua Compiler
local System = System
local SlipeClientGame
local SlipeClientPeds
local SlipeClientSounds
local SlipeMtaDefinitions
local SlipeSharedElements
local SlipeSharedExceptions
local SlipeSharedUtilities
System.import(function (out)
  SlipeClientGame = Slipe.Client.Game
  SlipeClientPeds = Slipe.Client.Peds
  SlipeClientSounds = Slipe.Client.Sounds
  SlipeMtaDefinitions = Slipe.MtaDefinitions
  SlipeSharedElements = Slipe.Shared.Elements
  SlipeSharedExceptions = Slipe.Shared.Exceptions
  SlipeSharedUtilities = Slipe.Shared.Utilities
end)
System.namespace("Slipe.Client.Peds", function (namespace)
  -- <summary>
  -- Class of MTA player elements
  -- </summary>
  namespace.class("Player", function (namespace)
    local getTeam, getName, getNametagColor, setNametagColor, getNametagText, setNametagText, getNametagShowing, setNametagShowing, 
    getPing, getVoice, getLocal, GetFromName, class, __ctor__
    __ctor__ = function (this, mtaElement)
      SlipeClientPeds.Ped.__ctor__[1](this, mtaElement)
    end
    getTeam = function (this)
      return SlipeSharedElements.ElementManager.getInstance():GetElement(SlipeMtaDefinitions.MtaShared.GetPlayerTeam(this.element), SlipeClientGame.Team)
    end
    getName = function (this)
      return SlipeMtaDefinitions.MtaShared.GetPlayerName(this.element)
    end
    getNametagColor = function (this)
      local r = SlipeMtaDefinitions.MtaShared.GetPlayerNametagColor(this.element)
      return System.new(SlipeSharedUtilities.Color, 4, System.toByte(r[1]), System.toByte(r[2]), System.toByte(r[3]))
    end
    setNametagColor = function (this, value)
      SlipeMtaDefinitions.MtaShared.SetPlayerNametagColor(this.element, value:getR(), value:getG(), value:getB())
    end
    getNametagText = function (this)
      return SlipeMtaDefinitions.MtaShared.GetPlayerNametagText(this.element)
    end
    setNametagText = function (this, value)
      SlipeMtaDefinitions.MtaShared.SetPlayerNametagText(this.element, value)
    end
    getNametagShowing = function (this)
      return SlipeMtaDefinitions.MtaShared.IsPlayerNametagShowing(this.element)
    end
    setNametagShowing = function (this, value)
      SlipeMtaDefinitions.MtaShared.SetPlayerNametagShowing(this.element, value)
    end
    getPing = function (this)
      return SlipeMtaDefinitions.MtaShared.GetPlayerPing(this.element)
    end
    getVoice = function (this)
      if this.voice == nil then
        this.voice = System.new(SlipeClientSounds.Sound, 6, this)
      end
      return this.voice
    end
    getLocal = function ()
      return SlipeClientPeds.LocalPlayer.getInstance()
    end
    -- <summary>
    -- Retrieves a player class instance from a specified player name
    -- </summary>
    GetFromName = function (name)
      local default, extern = System.try(function ()
        return true, SlipeSharedElements.ElementManager.getInstance():GetElement(SlipeMtaDefinitions.MtaShared.GetPlayerFromName(name), class)
      end, function (default)
        if System.is(default, SlipeMtaDefinitions.MtaException) then
          System.throw(SlipeSharedExceptions.NullElementException("No player with the name " .. name .. " could be found."))
        else
          return 1, default
        end
      end)
      if default then
        return extern
      end
    end
    class = {
      __inherits__ = function (out)
        return {
          out.Slipe.Client.Peds.Ped
        }
      end,
      getTeam = getTeam,
      getName = getName,
      getNametagColor = getNametagColor,
      setNametagColor = setNametagColor,
      getNametagText = getNametagText,
      setNametagText = setNametagText,
      getNametagShowing = getNametagShowing,
      setNametagShowing = setNametagShowing,
      getPing = getPing,
      getVoice = getVoice,
      getLocal = getLocal,
      GetFromName = GetFromName,
      __ctor__ = __ctor__,
      __metadata__ = function (out)
        return {
          class = { 0x6, System.new(out.Slipe.Shared.Elements.DefaultElementClassAttribute, 2, 1 --[[ElementType.Player]]) }
        }
      end
    }
    return class
  end)
end)
