-- Generated by CSharp.lua Compiler
local System = System
local SlipeClientPeds
local SlipeMtaDefinitions
local SlipeSharedPeds
local SystemNumerics
System.import(function (out)
  SlipeClientPeds = Slipe.Client.Peds
  SlipeMtaDefinitions = Slipe.MtaDefinitions
  SlipeSharedPeds = Slipe.Shared.Peds
  SystemNumerics = System.Numerics
end)
System.namespace("Slipe.Client.Peds", function (namespace)
  -- <summary>
  -- Represents a pedestrian
  -- </summary>
  namespace.class("Ped", function (namespace)
    local getCanBeKnockedOffBike, setCanBeKnockedOffBike, getCameraRotation, setCameraRotation, getMoveState, getOxygenLevel, setOxygenLevel, getSimplestTask, 
    getPedVoice, setPedVoice, getTargetStart, getTargetEnd, getTargetCollision, getWeaponMuzzlePosition, getIsReloadingWeapon, setFootBloodEnabled, 
    getAnimation, setAnimation, GetAnalogControlState, GetControlState, SetAnalogControlState, SetControlState, GetBonePosition, GiveWeapon, 
    IsDoingTask, AimAt, AimAt1, LookAt, LookAt1, __ctor1__, __ctor2__
    __ctor1__ = function (this, element)
      SlipeSharedPeds.SharedPed.__ctor__(this, element)
    end
    -- <summary>
    -- Create a new ped
    -- </summary>
    __ctor2__ = function (this, model, position, rotation)
      __ctor1__(this, SlipeMtaDefinitions.MtaClient.CreatePed(model, position.X, position.Y, position.Z, rotation))
    end
    getCanBeKnockedOffBike = function (this)
      return SlipeMtaDefinitions.MtaClient.CanPedBeKnockedOffBike(this.element)
    end
    setCanBeKnockedOffBike = function (this, value)
      SlipeMtaDefinitions.MtaClient.SetPedCanBeKnockedOffBike(this.element, value)
    end
    getCameraRotation = function (this)
      return SlipeMtaDefinitions.MtaClient.GetPedCameraRotation(this.element)
    end
    setCameraRotation = function (this, value)
      SlipeMtaDefinitions.MtaClient.SetPedCameraRotation(this.element, value)
    end
    getMoveState = function (this)
      return System.cast(System.Int32, System.Enum.Parse(System.typeof(SlipeClientPeds.MoveState), SlipeMtaDefinitions.MtaClient.GetPedMoveState(this.element), true))
    end
    getOxygenLevel = function (this)
      return SlipeMtaDefinitions.MtaClient.GetPedOxygenLevel(this.element)
    end
    setOxygenLevel = function (this, value)
      SlipeMtaDefinitions.MtaClient.SetPedOxygenLevel(this.element, value)
    end
    getSimplestTask = function (this)
      return System.cast(System.Int32, System.Enum.Parse(System.typeof(SlipeClientPeds.PedTask), SlipeMtaDefinitions.MtaClient.GetPedSimplestTask(this.element), true))
    end
    getPedVoice = function (this)
      local result = SlipeMtaDefinitions.MtaClient.GetPedVoice(this.element)
      return System.new(SlipeClientPeds.PedVoice, 2, result[1], result[2])
    end
    setPedVoice = function (this, value)
      SlipeMtaDefinitions.MtaClient.SetPedVoice(this.element, value.Group, value.Name)
    end
    getTargetStart = function (this)
      local result = SlipeMtaDefinitions.MtaClient.GetPedTargetStart(this.element)
      return SystemNumerics.Vector3(result[1], result[2], result[3])
    end
    getTargetEnd = function (this)
      local result = SlipeMtaDefinitions.MtaClient.GetPedTargetEnd(this.element)
      return SystemNumerics.Vector3(result[1], result[2], result[3])
    end
    getTargetCollision = function (this)
      local result = SlipeMtaDefinitions.MtaClient.GetPedTargetCollision(this.element)
      return SystemNumerics.Vector3(result[1], result[2], result[3])
    end
    getWeaponMuzzlePosition = function (this)
      local result = SlipeMtaDefinitions.MtaClient.GetPedWeaponMuzzlePosition(this.element)
      return SystemNumerics.Vector3(result[1], result[2], result[3])
    end
    getIsReloadingWeapon = function (this)
      return SlipeMtaDefinitions.MtaClient.IsPedReloadingWeapon(this.element)
    end
    setFootBloodEnabled = function (this, value)
      SlipeMtaDefinitions.MtaClient.SetPedFootBloodEnabled(this.element, value)
    end
    getAnimation = function (this)
      local result = SlipeMtaDefinitions.MtaClient.GetPedAnimation(this.element)
      return System.new(SlipeSharedPeds.Animation, 2, result[1], result[2])
    end
    setAnimation = function (this, value)
      this:SetAnimation(value:__clone__(), true, -1, true, true, true, 250)
    end
    -- <summary>
    -- Retrieve the analog control state of a certain control
    -- </summary>
    GetAnalogControlState = function (this, control)
      return SlipeMtaDefinitions.MtaClient.GetPedAnalogControlState(this.element, control:ToEnumString(SlipeSharedPeds.AnalogControl))
    end
    -- <summary>
    -- Checks wheter a ped has a certain control pressed
    -- </summary>
    GetControlState = function (this, control)
      return SlipeMtaDefinitions.MtaClient.GetPedControlState(this.element, control:ToEnumString(SlipeSharedPeds.AnalogControl))
    end
    -- <summary>
    -- Set the analog control state of this ped
    -- </summary>
    SetAnalogControlState = function (this, control, state)
      return SlipeMtaDefinitions.MtaClient.SetPedAnalogControlState(this.element, control:ToEnumString(SlipeSharedPeds.AnalogControl), state)
    end
    -- <summary>
    -- Set the control state of a ped
    -- </summary>
    SetControlState = function (this, control, state)
      return SlipeMtaDefinitions.MtaClient.SetPedControlState(this.element, control:ToEnumString(SlipeSharedPeds.AnalogControl), state)
    end
    -- <summary>
    -- Returns the 3D world coordinates of a specific bone of this ped
    -- </summary>
    GetBonePosition = function (this, bone)
      local result = SlipeMtaDefinitions.MtaClient.GetPedBonePosition(this.element, bone)
      return SystemNumerics.Vector3(result[1], result[2], result[3])
    end
    -- <summary>
    -- Gives a weapon to this ped
    -- </summary>
    GiveWeapon = function (this, weapon, ammo, setAsCurrent)
      return SlipeMtaDefinitions.MtaClient.GivePedWeapon(this.element, weapon.ID, ammo, setAsCurrent)
    end
    -- <summary>
    -- Check if this ped is doing a certain task
    -- </summary>
    IsDoingTask = function (this, task)
      return SlipeMtaDefinitions.MtaClient.IsPedDoingTask(this.element, task:ToEnumString(SlipeClientPeds.PedTask):ToUpper())
    end
    -- <summary>
    -- Set the ped aiming at a certain position
    -- </summary>
    AimAt = function (this, position)
      return SlipeMtaDefinitions.MtaClient.SetPedAimTarget(this.element, position.X, position.Y, position.Z)
    end
    -- <summary>
    -- Set the ped to target a specific physical element
    -- </summary>
    AimAt1 = function (this, targetElement)
      return AimAt(this, targetElement:getPosition())
    end
    -- <summary>
    -- Have the ped look at a specific position
    -- </summary>
    LookAt = function (this, position, time, blend)
      return SlipeMtaDefinitions.MtaClient.SetPedLookAt(this.element, position.X, position.Y, position.Z, time, blend)
    end
    -- <summary>
    -- Have the ped look at a specific physical element
    -- </summary>
    LookAt1 = function (this, lookAt, time, blend)
      return SlipeMtaDefinitions.MtaClient.SetPedLookAt(this.element, 0, 0, 0, time, blend, lookAt:getMTAElement())
    end
    return {
      __inherits__ = function (out)
        return {
          out.Slipe.Shared.Peds.SharedPed
        }
      end,
      getCanBeKnockedOffBike = getCanBeKnockedOffBike,
      setCanBeKnockedOffBike = setCanBeKnockedOffBike,
      getCameraRotation = getCameraRotation,
      setCameraRotation = setCameraRotation,
      getMoveState = getMoveState,
      getOxygenLevel = getOxygenLevel,
      setOxygenLevel = setOxygenLevel,
      getSimplestTask = getSimplestTask,
      getPedVoice = getPedVoice,
      setPedVoice = setPedVoice,
      getTargetStart = getTargetStart,
      getTargetEnd = getTargetEnd,
      getTargetCollision = getTargetCollision,
      getWeaponMuzzlePosition = getWeaponMuzzlePosition,
      getIsReloadingWeapon = getIsReloadingWeapon,
      setFootBloodEnabled = setFootBloodEnabled,
      getAnimation = getAnimation,
      setAnimation = setAnimation,
      GetAnalogControlState = GetAnalogControlState,
      GetControlState = GetControlState,
      SetAnalogControlState = SetAnalogControlState,
      SetControlState = SetControlState,
      GetBonePosition = GetBonePosition,
      GiveWeapon = GiveWeapon,
      IsDoingTask = IsDoingTask,
      AimAt = AimAt,
      AimAt1 = AimAt1,
      LookAt = LookAt,
      LookAt1 = LookAt1,
      __ctor__ = {
        __ctor1__,
        __ctor2__
      },
      __metadata__ = function (out)
        return {
          class = { 0x6, System.new(out.Slipe.Shared.Elements.DefaultElementClassAttribute, 2, 2 --[[ElementType.Ped]]) }
        }
      end
    }
  end)
end)
