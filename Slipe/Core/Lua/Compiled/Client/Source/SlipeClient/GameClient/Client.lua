-- Generated by CSharp.lua Compiler
local System = System
local SlipeClientGameClient
local SlipeClientIO
local SlipeClientRendering
local SlipeMtaDefinitions
local SlipeSharedHelpers
System.import(function (out)
  SlipeClientGameClient = Slipe.Client.GameClient
  SlipeClientIO = Slipe.Client.IO
  SlipeClientRendering = Slipe.Client.Rendering
  SlipeMtaDefinitions = Slipe.MtaDefinitions
  SlipeSharedHelpers = Slipe.Shared.Helpers
end)
System.namespace("Slipe.Client.GameClient", function (namespace)
  -- <summary>
  -- Static class that handles calls to functions related to the client
  -- </summary>
  namespace.class("Client", function (namespace)
    local getRenderer, getEngine, console, getConsole, debug, getDebug, getIsVoiceEnabled, getActiveRadioStation, 
    setActiveRadioStation, getGuiInputEnabled, setGuiInputEnabled, getInputMode, setInputMode, getIsMainMenuActive, getIsMtaWindowActive, getIsTransferBoxActive, 
    getTickCount, version, getVersion, getLocalization, getIsTrayNotificationEnabled, CreateTrayNotification, SetClipboard, SetWindowFlashing
    getRenderer = function ()
      return SlipeClientRendering.Renderer.getInstance()
    end
    getEngine = function ()
      return SlipeClientGameClient.Engine.getInstance()
    end
    getConsole = function ()
      if console == nil then
        console = SlipeClientIO.MtaConsole()
      end
      return console
    end
    getDebug = function ()
      if debug == nil then
        debug = SlipeClientIO.MtaDebug()
      end
      return debug
    end
    getIsVoiceEnabled = function ()
      return SlipeMtaDefinitions.MtaShared.IsVoiceEnabled()
    end
    getActiveRadioStation = function ()
      return SlipeMtaDefinitions.MtaClient.GetRadioChannel()
    end
    setActiveRadioStation = function (value)
      SlipeMtaDefinitions.MtaClient.SetRadioChannel(value)
    end
    getGuiInputEnabled = function ()
      return SlipeMtaDefinitions.MtaClient.GuiGetInputEnabled()
    end
    setGuiInputEnabled = function (value)
      SlipeMtaDefinitions.MtaClient.GuiSetInputEnabled(value)
    end
    getInputMode = function ()
      return System.cast(System.Int32, System.Enum.Parse(System.typeof(SlipeClientGameClient.InputMode), SlipeMtaDefinitions.MtaClient.GuiGetInputMode(), true))
    end
    setInputMode = function (value)
      SlipeMtaDefinitions.MtaClient.GuiSetInputMode(value:ToEnumString(SlipeClientGameClient.InputMode):ToLower())
    end
    getIsMainMenuActive = function ()
      return SlipeMtaDefinitions.MtaClient.IsMainMenuActive()
    end
    getIsMtaWindowActive = function ()
      return SlipeMtaDefinitions.MtaClient.IsMTAWindowActive()
    end
    getIsTransferBoxActive = function ()
      return SlipeMtaDefinitions.MtaClient.IsTransferBoxActive()
    end
    getTickCount = function ()
      return SlipeMtaDefinitions.MtaShared.GetTickCount()
    end
    getVersion = function ()
      if version == nil then
        version = SlipeSharedHelpers.SystemVersion()
      end
      return version
    end
    getLocalization = function ()
      local d = SlipeMtaDefinitions.MtaShared.GetDictionaryFromTable(SlipeMtaDefinitions.MtaClient.GetLocalization(), "System.String", "System.String")
      return System.tuple(d:get("code"), d:get("name"))
    end
    getIsTrayNotificationEnabled = function ()
      return SlipeMtaDefinitions.MtaClient.IsTrayNotificationEnabled()
    end
    -- <summary>
    -- Create a windows tray notification
    -- </summary>
    CreateTrayNotification = function (text, trayIcon, useSound)
      SlipeMtaDefinitions.MtaClient.CreateTrayNotification(text, trayIcon:ToEnumString(SlipeClientGameClient.TrayIconType):ToLower(), useSound)
    end
    -- <summary>
    -- Set the client's clipboard text
    -- </summary>
    SetClipboard = function (text)
      return SlipeMtaDefinitions.MtaClient.SetClipboard(text)
    end
    -- <summary>
    -- Set the client's window flashing
    -- </summary>
    SetWindowFlashing = function (shouldFlash, count)
      return SlipeMtaDefinitions.MtaClient.SetWindowFlashing(shouldFlash, count)
    end
    return {
      getRenderer = getRenderer,
      getEngine = getEngine,
      getConsole = getConsole,
      getDebug = getDebug,
      getIsVoiceEnabled = getIsVoiceEnabled,
      getActiveRadioStation = getActiveRadioStation,
      setActiveRadioStation = setActiveRadioStation,
      getGuiInputEnabled = getGuiInputEnabled,
      setGuiInputEnabled = setGuiInputEnabled,
      getInputMode = getInputMode,
      setInputMode = setInputMode,
      getIsMainMenuActive = getIsMainMenuActive,
      getIsMtaWindowActive = getIsMtaWindowActive,
      getIsTransferBoxActive = getIsTransferBoxActive,
      getTickCount = getTickCount,
      getVersion = getVersion,
      getLocalization = getLocalization,
      getIsTrayNotificationEnabled = getIsTrayNotificationEnabled,
      CreateTrayNotification = CreateTrayNotification,
      SetClipboard = SetClipboard,
      SetWindowFlashing = SetWindowFlashing
    }
  end)
end)
