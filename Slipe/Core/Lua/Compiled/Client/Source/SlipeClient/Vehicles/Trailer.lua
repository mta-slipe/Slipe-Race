-- Generated by CSharp.lua Compiler
local System = System
local SlipeClientVehicles
local SlipeMtaDefinitions
local SlipeSharedElements
System.import(function (out)
  SlipeClientVehicles = Slipe.Client.Vehicles
  SlipeMtaDefinitions = Slipe.MtaDefinitions
  SlipeSharedElements = Slipe.Shared.Elements
end)
System.namespace("Slipe.Client.Vehicles", function (namespace)
  -- <summary>
  -- Represents a towable trailer
  -- </summary>
  namespace.class("Trailer", function (namespace)
    local getTowingVehicle, setTowingVehicle, AttachTo4, __ctor1__, __ctor2__, __ctor3__
    -- <summary>
    -- Create a vehicle from a model at a position
    -- </summary>
    __ctor1__ = function (this, model, position)
      SlipeClientVehicles.Vehicle.__ctor__[2](this, model, position:__clone__())
    end
    -- <summary>
    -- Create a vehicle model using all createVehicle arguments
    -- </summary>
    __ctor2__ = function (this, model, position, rotation, numberplate, variant1, variant2)
      SlipeClientVehicles.Vehicle.__ctor__[3](this, model, position:__clone__(), rotation:__clone__(), numberplate, variant1, variant2)
    end
    __ctor3__ = function (this, element)
      SlipeClientVehicles.Vehicle.__ctor__[1](this, element)
    end
    getTowingVehicle = function (this)
      return SlipeSharedElements.ElementManager.getInstance():GetElement(SlipeMtaDefinitions.MtaShared.GetVehicleTowingVehicle(this.element), SlipeClientVehicles.Vehicle)
    end
    setTowingVehicle = function (this, value)
      AttachTo4(this, value)
    end
    -- <summary>
    -- Attach this trailer to a vehicle
    -- </summary>
    AttachTo4 = function (this, vehicle)
      return SlipeMtaDefinitions.MtaShared.AttachTrailerToVehicle(this.element, vehicle:getMTAElement())
    end
    return {
      __inherits__ = function (out)
        return {
          out.Slipe.Client.Vehicles.Vehicle
        }
      end,
      getTowingVehicle = getTowingVehicle,
      setTowingVehicle = setTowingVehicle,
      AttachTo4 = AttachTo4,
      __ctor__ = {
        __ctor1__,
        __ctor2__,
        __ctor3__
      }
    }
  end)

  -- <summary>
  -- Represents different trailer models
  -- </summary>
  namespace.class("TrailerModel", function (namespace)
    local getBaggageCovered, getBaggageUncovered, getSteps, getFarmtrailer, getStreetcleaner, getGasSemi, getSemi, getOpenSemi, 
    getSmallSemi, class, __ctor__
    __ctor__ = function (this, id)
      SlipeClientVehicles.BaseVehicleModel.__ctor__(this, id)
    end
    getBaggageCovered = function ()
      return class(606)
    end
    getBaggageUncovered = function ()
      return class(607)
    end
    getSteps = function ()
      return class(608)
    end
    getFarmtrailer = function ()
      return class(610)
    end
    getStreetcleaner = function ()
      return class(611)
    end
    getGasSemi = function ()
      return class(584)
    end
    getSemi = function ()
      return class(435)
    end
    getOpenSemi = function ()
      return class(450)
    end
    getSmallSemi = function ()
      return class(591)
    end
    class = {
      __inherits__ = function (out)
        return {
          out.Slipe.Client.Vehicles.BaseVehicleModel
        }
      end,
      getBaggageCovered = getBaggageCovered,
      getBaggageUncovered = getBaggageUncovered,
      getSteps = getSteps,
      getFarmtrailer = getFarmtrailer,
      getStreetcleaner = getStreetcleaner,
      getGasSemi = getGasSemi,
      getSemi = getSemi,
      getOpenSemi = getOpenSemi,
      getSmallSemi = getSmallSemi,
      __ctor__ = __ctor__
    }
    return class
  end)
end)
